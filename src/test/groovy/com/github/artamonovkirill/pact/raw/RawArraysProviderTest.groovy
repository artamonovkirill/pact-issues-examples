package com.github.artamonovkirill.pact.raw

import au.com.dius.pact.provider.junit.PactRunner
import au.com.dius.pact.provider.junit.Provider
import au.com.dius.pact.provider.junit.loader.PactFolder
import au.com.dius.pact.provider.junit.target.HttpTarget
import au.com.dius.pact.provider.junit.target.Target
import au.com.dius.pact.provider.junit.target.TestTarget
import com.github.tomakehurst.wiremock.WireMockServer
import org.junit.After
import org.junit.Before
import org.junit.runner.RunWith

import static com.github.tomakehurst.wiremock.client.WireMock.aResponse
import static com.github.tomakehurst.wiremock.client.WireMock.get
import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo

@RunWith(PactRunner)
@Provider('RawArrayProvider')
@PactFolder('target/pacts')
class RawArraysProviderTest {

    def wiremock = new WireMockServer(RawArraysConsumerSpec.PORT)

    /* used by autogenerated test classes */
    @SuppressWarnings('GroovyUnusedDeclaration')
    @TestTarget
    public static Target target = new HttpTarget(
            'localhost',
            RawArraysConsumerSpec.PORT)

    @Before
    void 'Start wiremock'() {
        wiremock.start()
        wiremock.stubFor(get(urlEqualTo(RawArraysConsumerSpec.PATH))
                .willReturn(aResponse()
                .withStatus(200)
                .withHeader('Content-Type', 'application/json')
                .withBody('''{
                                    "eachLkEqTo": [""],
                                    "eachLkRgxp": [""]
                                  }''')))
    }

    @After
    void 'Stop wiremock'() {
        wiremock.stop()
    }

}
